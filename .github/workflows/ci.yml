# This workflow uses pnpm to install dependencies, run tests, and check coverage.
# It's broken into separate jobs for checkout, build, test, and lint.
# It detects the package manager from package.json

name: Vitest with pnpm

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  NODE_VERSION: "22" # Use a variable for the Node.js version

jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.git_info.outputs.commit_sha }}
      branch: ${{ steps.git_info.outputs.branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - id: git_info
        run: |
          echo "::set-output name=commit_sha::$(git rev-parse HEAD)"
          echo "::set-output name=branch::$(git rev-parse --abbrev-ref HEAD)"
      - uses: actions/setup-node@v4 # Setup Node.js once here
        with:
          node-version: ${{ env.NODE_VERSION }} # Use the variable
          cache: "pnpm"

  build:
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Setup pnpm and install dependencies
        uses: pnpm/action-setup@v2
        with:
          run_install: true
      - name: Build project
        run: pnpm exec tsc

  test:
    needs: checkout # Changed from needs: build to needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Setup pnpm and install dependencies
        uses: pnpm/action-setup@v4
        with:
          run_install: true
      - name: Run Vitest tests
        run: pnpm exec vitest run --coverage
        if: always()
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   if: always()

  lint:
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Setup pnpm and install dependencies
        uses: pnpm/action-setup@v2
        with:
          run_install: true
      - name: Run ESLint
        run: pnpm exec eslint .
      - name: Run TypeScript Type Check
        run: pnpm exec tsc --noEmit
